name: Continuous Integration

on:
  push:
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [ lts/-1, lts/* ]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Set up ${{ matrix.node-version }} environment
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint the project
        run: npm run lint

      - name: Build the project
        run: npm run build
        env:
          CI: true

  publish:
    name: Publish release to NPM
    needs: build
    runs-on: ubuntu-latest

    # Publish only if we've received a release event and the tag starts with "v" (aka v1.2.3)
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')

    # Ensure we have permissions to provide our provenance attestation.
    permissions:
       id-token: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

        # Setup .npmrc file to publish to npm
      - name: Setup the node environment
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: lts/-1
          registry-url: 'https://registry.npmjs.org'

      - name: Install package
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: |
          TAG=$(echo $GITHUB_REF_NAME | grep -oP 'v\d+\.\d+\.\d+-?\K(\w+)?')
          echo $TAG
          npm publish --tag ${TAG:-latest}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}